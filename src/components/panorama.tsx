"use client";

import { Canvas } from "@react-three/fiber";
import { OrbitControls } from "@react-three/drei";
import { Suspense } from "react";
import * as THREE from "three";

export default function CinemaRoom() {
  return (
    <Canvas className="w-full h-screen">
      <Suspense fallback={null}>
        <CinemaScene />
      </Suspense>
      <OrbitControls />
    </Canvas>
  );
}

function CinemaScene() {
  return (
    <>
      {/* √Ånh s√°ng trong r·∫°p */}
      <ambientLight intensity={0.5} />
      <pointLight position={[0, 4, -3]} intensity={0.6} color="white" />
      <spotLight position={[0, 5, -4]} angle={0.5} intensity={1} />

      {/* S√†n */}
      <mesh position={[0, -0.5, 0]}>
        <boxGeometry args={[12, 0.2, 10]} />
        <meshStandardMaterial color="darkgray" />
      </mesh>

      {/* T∆∞·ªùng r·∫°p */}
      {/* B·ª©c t∆∞·ªùng ph√≠a sau gh·∫ø */}
      <mesh position={[0, 2, -5]}>
        <boxGeometry args={[12, 5, 0.2]} />
        <meshStandardMaterial color="black" roughness={0.8} />
      </mesh>

      {/* B·ª©c t∆∞·ªùng ph√≠a tr∆∞·ªõc gh·∫ø */}
      <mesh position={[0, 2, 5]}>
        <boxGeometry args={[12, 5, 0.2]} />
        <meshStandardMaterial color="black" roughness={0.8} />
      </mesh>

      {/* T∆∞·ªùng b√™n ph·∫£i h√†ng gh·∫ø */}
      <mesh position={[-5.9, 2, 0]}>
        <boxGeometry args={[0.2, 5, 10]} />
        <meshStandardMaterial color="black" roughness={0.8} />
      </mesh>
      {/* T∆∞·ªùng b√™n tr√°i h√†ng gh·∫ø */}

      <mesh position={[5.9, 2, 0]}>
        <boxGeometry args={[0.2, 5, 10]} />
        <meshStandardMaterial color="black" roughness={0.8} />
      </mesh>

      {/* M√†n chi·∫øu */}
      <mesh position={[0, 2.5, 4.9]} rotation={[0, Math.PI, 0]}>
        <planeGeometry args={[9, 3]} />
        <meshStandardMaterial color="white" />
      </mesh>

      {/* Gh·∫ø ng·ªìi (b·∫≠c thang, ch√¢n th·ª±c h∆°n) */}
      {Array.from({ length: 5 }).map((_, row) =>
        Array.from({ length: 8 }).map((_, col) => (
          <CinemaSeat
            key={`${row}-${col}`}
            position={[-3.5 + col, row * 0.4, 1.2 - row * 1.4]}
          />
        ))
      )}

      {Array.from({ length: 5 }).map((_, row) => (
        <Stair key={`${row}`} position={[0, row * 0.4, -0.2 - row * 1.4]} />
      ))}
    </>
  );
}
function Stair({ position }: { position: [number, number, number] }) {
  return (
    <group position={position}>
      <mesh position={[-4.99 /*x */, -0.3 /*y */, 1.4 /*z */]}>
        <boxGeometry args={[2 /*x */, 0.4 /*y */, 1.2 + 0.21 /*z */]} />
        <meshStandardMaterial color="#708090" />
      </mesh>

      <lineSegments position={[-4.99, -0.3, 1.4]}>
        <edgesGeometry
          attach="geometry"
          args={[new THREE.BoxGeometry(2, 0.4, 1.2 + 0.21)]}
        />
        <lineBasicMaterial attach="material" color="#F5F5DC" />
      </lineSegments>
    </group>
  );
}
/* üé≠ Gh·∫ø ng·ªìi m√¥ ph·ªèng ngo√†i r·∫°p (g·ªìm ch·ªó ng·ªìi, t·ª±a l∆∞ng, tay v·ªãn) */
function CinemaSeat({ position }: { position: [number, number, number] }) {
  return (
    <group position={position}>
      {/* Ch·ªó ng·ªìi (n·ªám) */}
      <mesh position={[0, 0.2, 0]}>
        <boxGeometry args={[0.8, 0.2, 0.8]} />
        <meshStandardMaterial color="red" />
      </mesh>

      {/* L∆∞ng gh·∫ø */}
      <mesh position={[0, 0.6, -0.3]}>
        <boxGeometry args={[0.8, 0.8, 0.2]} />
        <meshStandardMaterial color="red" />
      </mesh>

      {/* Tay v·ªãn (tr√°i) */}
      <mesh position={[-0.45, 0.2, 0]}>
        <boxGeometry args={[0.1, 0.3, 0.6]} />
        <meshStandardMaterial color="black" />
      </mesh>

      {/* Tay v·ªãn (ph·∫£i) */}
      <mesh position={[0.45, 0.2, 0]}>
        <boxGeometry args={[0.1, 0.3, 0.6]} />
        <meshStandardMaterial color="black" />
      </mesh>

      {/* üè† S√†n gh·∫ø */}
      <mesh position={[0, -0.1, 0]}>
        <boxGeometry args={[1, 0.2, 1]} /> {/* N·ªÅn d∆∞·ªõi gh·∫ø */}
        <meshStandardMaterial color="gray" />
      </mesh>

      {/* ü™ú B·∫≠c thang ƒëi l√™n */}
      <mesh position={[0, -0.25, 0.5]}>
        <boxGeometry args={[0.8, 0.2, 0.4]} /> {/* B·∫≠c thang nh·ªè ph√≠a tr∆∞·ªõc */}
        <meshStandardMaterial color="gray" />
      </mesh>
    </group>
  );
}
